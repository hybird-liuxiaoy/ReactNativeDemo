package com.example.pushlibrary;

import android.app.Service;
import android.content.BroadcastReceiver;
import android.content.Context;
import android.content.Intent;
import android.os.IBinder;
import android.util.Log;


public class RNPushService extends Service {
    private static final String TAG = "RNPushService";

    private Thread mServiceThread;

    @Override
    public IBinder onBind(Intent intent) {
        return null;
    }


    @Override
    public void onCreate() {
        Log.d(TAG, "onCreate");
        super.onCreate();
        RNWebPushHelper.getInstance(getApplicationContext()).startForeground(this);
        mServiceThread = new Thread() {
            @Override
            public void run() {
                RNWebPushHelper.getInstance(getApplicationContext()).startWebSocket();
            }
        };
        mServiceThread.setName(TAG);
        mServiceThread.start();
    }

    @Override
    public int onStartCommand(Intent intent, int flags, int startId) {
        // We want this service to continue running until it is explicitly
        // stopped, so return sticky.
        return START_STICKY;
    }

    @Override
    public void onDestroy() {
        Log.d(TAG, "onDestroy");
        if (mServiceThread != null && mServiceThread.isAlive()){
            mServiceThread.interrupt();
        }
        RNWebPushHelper.getInstance(getApplicationContext()).stopForeground(this);
        RNWebPushHelper.getInstance(getApplicationContext()).stopWebSocket();
        super.onDestroy();
    }

    public static class RNPushServiceReceiver extends BroadcastReceiver{

        @Override
        public void onReceive(Context context, Intent intent) {
            String action = intent.getAction();
            if (Intent.ACTION_BOOT_COMPLETED.equals(action)) {
                Log.d(TAG, "Boot completed, start push service!");
                Intent i=new Intent(context,RNPushService.class);
                context.startService(i);
            }
        }
    }
}
