package com.example.notification;

import android.util.Log;

import com.facebook.react.bridge.Callback;
import com.facebook.react.bridge.ReactApplicationContext;
import com.facebook.react.bridge.ReactContext;
import com.facebook.react.bridge.ReactContextBaseJavaModule;
import com.facebook.react.bridge.ReactMethod;
import com.facebook.react.bridge.WritableMap;
import com.facebook.react.modules.core.DeviceEventManagerModule;

import javax.annotation.Nullable;


public class RNNotificationAndroid extends ReactContextBaseJavaModule {
    private static final String TAG = "RNNotificationAndroid";

    private static ReactApplicationContext mContext;

    public RNNotificationAndroid(ReactApplicationContext reactContext) {
        super(reactContext);
        mContext = reactContext;
    }

    @Override
    public String getName() {
        return TAG;
    }

    @ReactMethod
    public void clearNotification() {
        Log.d(TAG,"clearNotification");
        RNNotificationService service = RNNotificationService.getInstance(getReactApplicationContext());
        if (service != null) {
            service.clearNotification();
        }
    }

    @ReactMethod
    public void getApplicationIconBadgeNumber(Callback c) {
        RNNotificationService service = RNNotificationService.getInstance(getReactApplicationContext());
        if (service != null) {
            c.invoke(null,service.getNum());
        }
    }

    @ReactMethod
    public void showNotification(String message) {
        Log.d(TAG,"showNotification:"+message);
        RNNotificationService service = RNNotificationService.getInstance(getReactApplicationContext());
        if (service != null) {
            service.showNotification(message);
        }
    }

    static void onClickNotification() {
        if (mContext != null){
            sendEvent(mContext,"onNotificationClick",null);
        }
    }

    private static void sendEvent(ReactContext reactContext,
                                  String eventName,
                                  @Nullable WritableMap params) {
        reactContext
                .getJSModule(DeviceEventManagerModule.RCTDeviceEventEmitter.class)
                .emit(eventName, params);
    }
}
